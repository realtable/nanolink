#!/usr/bin/env node
!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(n(1)),u=r(n(2)),i=r(n(3)),a=r(n(4)),l=o.default();var s=()=>u.default.randomBytes(4).toString("hex");function f(e,t,n){n.status(e),n.set("Content-Type","text/plain"),n.send(t)}l.get("/create/*",(e,t)=>{let n=s();for(;a.default[n];)n=s();a.default[n]=e.params[0],i.default.writeFileSync("database.json",JSON.stringify(a.default)),f(200,`200 Success: ${`${e.protocol}://${e.get("host")}/${n}`}`,t)}),l.get("/:id",(e,t)=>{let n=a.default[e.params.id];n?t.redirect(n):f(404,"404 File Not Found",t)}),l.get("/",(e,t)=>{f(200,`*** nanolink ***\nQuery ${`${e.protocol}://${e.get("host")}`}/create/myURL to create a new link for 'myURL'.\nIf you find a bug, please report it at https://github.com/realtable/nanolink/issues.`,t)}),l.listen(3e3,()=>console.log("nanolink server listening on port 3000"))},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("fs")},function(e){e.exports=JSON.parse("{}")}]);