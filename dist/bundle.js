#!/usr/bin/env node
!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(r(1)),u=n(r(2)),i=n(r(3)),a=n(r(4)),l=o.default();var s=()=>u.default.randomBytes(4).toString("hex");function f(e,t,r){r.status(e),r.set("Content-Type","text/plain"),r.send(t)}l.get("/create/*",(e,t)=>{let r=s();for(;a.default[r];)r=s();let n=e.params[0],o="/";o=n.startsWith("https://")?n.replace("https://","//"):n.startsWith("http://")?n.replace("http://","//"):n.startsWith("//")?n:"//"+n;for(let e in a.default)if(a.default.hasOwnProperty(e)&&a.default[e]==o){r=e;break}a.default[r]=o,i.default.writeFileSync("database.json",JSON.stringify(a.default)),f(200,`200 Success: ${`${e.protocol}://${e.get("host")}/${r}`}`,t)}),l.get("/:id",(e,t)=>{let r=a.default[e.params.id];r?t.redirect(r):f(404,"404 File Not Found",t)}),l.get("/",(e,t)=>{f(200,`*** nanolink ***\nQuery ${`${e.protocol}://${e.get("host")}`}/create/myURL to create a new link for 'myURL'.\nIf you find a bug, please report it at https://github.com/realtable/nanolink/issues.`,t)}),l.listen(3e3,()=>console.log("nanolink server listening on port 3000"))},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("fs")},function(e){e.exports=JSON.parse("{}")}]);